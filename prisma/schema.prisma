// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String   @unique
  password  String
  balance   Float    @default(0)
  lastAiDepositDate DateTime? // Date of last AI-verified deposit for withdrawal restrictions
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  transactions Transaction[]
  investmentLogs InvestmentLog[]
}

model Transaction {
  id        String      @id @default(cuid())
  type      TransactionType
  amount    Float
  status    TransactionStatus @default(PENDING)
  userId    String
  referenceId String?   @unique // Airtel Money reference from screenshot
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model InvestmentLog {
  id        String   @id @default(cuid())
  userId    String
  oldBalance Float
  newBalance Float
  growthRate Float
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}